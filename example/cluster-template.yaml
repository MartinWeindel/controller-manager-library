apiVersion: gardener.cloud/v1alpha1
kind: ClusterTemplate
metadata:
  name: open-source
spec:
  resources:
  # Shoot namespace in the Seed cluster
  - name: namespace
    type: Resource
    topology: seed
    config:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: shoot--{{ project.metadata.name }}--{{ shoot.metadata.name }}
    ready:
      path: status.phase
      value: Active
  # Ingress for the kube-apiserver of the Shoot
  - name: apiserver-ingress
    type: Resource
    topology: seed
    dependsOn:
    - name: namespace
    config:
      apiVersion: extensions.gardener.cloud/v1alpha1
      kind: APIServerIngress
      metadata:
        name: {{ shoot.metadata.name }}
        namespace: {{ namespace.metadata.name }}
      spec:
        type: AWS
    ready:
    - path: status.ingress
      check: notNull
  # Certificate for the cluster CA
  - name: certificate-ca
    type: Resource
    topology: garden
    dependsOn:
    - name: apiserver-ingress
    config:
      apiVersion: extensions.gardener.cloud/v1alpha1
      kind: Certificate
      metadata:
        name: ca
        namespace: {{ shoot.metadata.namespace }}
      spec:
        ...
    ready:
    - path: status.crt
      check: notNull
    - path: status.key
      check: notNull
  ...
  - name: certificate-ca-seed
    type: Resource
    topology: seed
    dependsOn:
    - name: certificate-ca
    - name: namespace
    config:
      apiVersion: v1
      kind: Secret
      metadata:
        name: ca
        namespace: {{ namespace.metadata.name }}
      data:
        ca.crt: {{ base64(certificate-ca.status.crt) }}
        ca.key: {{ base64(certificate-ca.status.key) }}
  ...
  - name: infrastructure
    type: Resource
    dependsOn:
    - name: namespace
    - name: apiserver-ingress
    ...
    config:
      apiVersion: extensions.gardener.cloud/v1alpha1
      kind: Infrastructure
      metadata:
        name: {{ shoot.metadata.name }}
        namespace: {{ namespace.metadata.name }}
      spec:
        type: {{ shoot.spec.type }}
        providerConfig: {{ shoot.spec.infrastructure.providerConfig }}
        dns:
          api: api.{{ shoot.spec.dns.domain }}
        region: eu-west-1
        secretRef:
          name: {{ cloudprovider-secret.metadata.name }}
        sshPublicKey: {{ base64(ssh-keypair.status.public-key }}
    ready:
    - path: metadata.generation
      check: equal
      secondPath: status.observedGeneration
    - path: status.error
      check: isNull
  ...
